#!/usr/bin/env node

import { SSMClient, GetParameterCommand } from '@aws-sdk/client-ssm';
import axios from 'axios';

const ssmClient = new SSMClient({region: 'us-east-2'});
const GHL_BASE_URL = 'https://services.leadconnectorhq.com';
const GHL_API_VERSION = '2021-07-28';

async function getValidGhlToken() {
    const command = new GetParameterCommand({
        Name: '/vapi-ghl-integration/ghl-access-token',
        WithDecryption: true
    });
    const result = await ssmClient.send(command);
    return result.Parameter.Value;
}

async function testContactAndNote() {
    try {
        const accessToken = await getValidGhlToken();
        const locationId = 'Tty8tmfsIBN4DdOVzgVa'; // From JWT token
        
        console.log('🏢 Using location ID:', locationId);
        
        // First, let's search for existing contacts
        console.log('🔍 Searching for existing contacts...');
        const searchResponse = await axios.get(`${GHL_BASE_URL}/contacts/`, {
            headers: {
                'Authorization': `Bearer ${accessToken}`,
                'Version': GHL_API_VERSION,
                'Content-Type': 'application/json'
            },
            params: {
                locationId: locationId,
                limit: 5
            }
        });
        
        console.log('📞 Existing contacts:', JSON.stringify(searchResponse.data, null, 2));
        
        let testContactId;
        
        if (searchResponse.data.contacts && searchResponse.data.contacts.length > 0) {
            // Use the first existing contact
            testContactId = searchResponse.data.contacts[0].id;
            console.log(`✅ Using existing contact ID: ${testContactId}`);
        } else {
            // Create a new test contact
            console.log('📞 Creating new test contact...');
            const contactData = {
                firstName: 'Test',
                lastName: 'Contact',
                phone: '+15551234567',
                email: 'test.contact@example.com',
                locationId: locationId
            };
            
            const createResponse = await axios.post(`${GHL_BASE_URL}/contacts/`, contactData, {
                headers: {
                    'Authorization': `Bearer ${accessToken}`,
                    'Version': GHL_API_VERSION,
                    'Content-Type': 'application/json'
                }
            });
            
            testContactId = createResponse.data.contact.id;
            console.log(`✅ Test contact created with ID: ${testContactId}`);
        }
        
        // Now test creating a note
        console.log('📝 Creating test note...');
        const noteBody = `📞 VAPI Call Summary TEST
Call ID: test-call-direct
Duration: 19 minutes
Date: 9/11/2025

🎯 Key Information Extracted:
• Name: Test Contact
• Email: test.contact@example.com
• Phone: +15551234567

📝 Full Transcript:
"This is a test transcript for testing the notes feature."

🎵 Audio Recording:
Call ID: test-call-direct (Contact VAPI support for audio access)

Generated by VAPI-GHL Integration`;

        const noteResponse = await axios.post(`${GHL_BASE_URL}/contacts/${testContactId}/notes`, {
            body: noteBody
        }, {
            headers: {
                'Authorization': `Bearer ${accessToken}`,
                'Version': GHL_API_VERSION,
                'Content-Type': 'application/json'
            }
        });
        
        console.log('📝 Note creation API response:', JSON.stringify(noteResponse.data, null, 2));
        console.log(`✅ Note created successfully! Note ID: ${noteResponse.data?.id || noteResponse.data}`);
        console.log('🎉 Contact notes functionality is working!');
        
        return testContactId;
        
    } catch (error) {
        console.error('❌ Error details:');
        console.error('Message:', error.message);
        console.error('Code:', error.code);
        console.error('Stack:', error.stack);
        if (error.response) {
            console.error('Response Status:', error.response.status);
            console.error('Response Data:', error.response.data);
            console.error('Response Headers:', error.response.headers);
        }
    }
}

testContactAndNote();